<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ma.clothes.dao.DocumentItemMapper">
  <resultMap id="BaseResultMap" type="com.ma.clothes.pojo.entity.DocumentItem">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="header_id" jdbcType="VARCHAR" property="headerId" />
    <result column="material_id" jdbcType="VARCHAR" property="materialId" />
    <result column="measuring_unit" jdbcType="VARCHAR" property="measuringUnit" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="basic_number" jdbcType="INTEGER" property="basicNumber" />
    <result column="unit_price" jdbcType="INTEGER" property="unitPrice" />
    <result column="tax_unit_price" jdbcType="INTEGER" property="taxUnitPrice" />
    <result column="all_price" jdbcType="BIGINT" property="allPrice" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="incidentals" jdbcType="BIGINT" property="incidentals" />
    <result column="depot_id" jdbcType="VARCHAR" property="depotId" />
    <result column="another_depot_id" jdbcType="VARCHAR" property="anotherDepotId" />
    <result column="tax_rate" jdbcType="DOUBLE" property="taxRate" />
    <result column="tax_money" jdbcType="BIGINT" property="taxMoney" />
    <result column="tax_last_money" jdbcType="BIGINT" property="taxLastMoney" />
    <result column="other_field1" jdbcType="VARCHAR" property="otherField1" />
    <result column="other_field2" jdbcType="VARCHAR" property="otherField2" />
    <result column="other_field3" jdbcType="VARCHAR" property="otherField3" />
    <result column="other_field4" jdbcType="VARCHAR" property="otherField4" />
    <result column="other_field5" jdbcType="VARCHAR" property="otherField5" />
    <result column="material_type" jdbcType="VARCHAR" property="materialType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, header_id, material_id, measuring_unit, count, basic_number, unit_price, tax_unit_price, 
    all_price, remark, icon, incidentals, depot_id, another_depot_id, tax_rate, tax_money, 
    tax_last_money, other_field1, other_field2, other_field3, other_field4, other_field5, 
    material_type
  </sql>
  <select id="selectByExample" parameterType="com.ma.clothes.pojo.entity.DocumentItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from clo_document_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from clo_document_item
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from clo_document_item
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ma.clothes.pojo.entity.DocumentItemExample">
    delete from clo_document_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ma.clothes.pojo.entity.DocumentItem">
    insert into clo_document_item (id, header_id, material_id, 
      measuring_unit, count, basic_number, 
      unit_price, tax_unit_price, all_price, 
      remark, icon, incidentals, 
      depot_id, another_depot_id, tax_rate, 
      tax_money, tax_last_money, other_field1, 
      other_field2, other_field3, other_field4, 
      other_field5, material_type)
    values (#{id,jdbcType=VARCHAR}, #{headerId,jdbcType=VARCHAR}, #{materialId,jdbcType=VARCHAR}, 
      #{measuringUnit,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{basicNumber,jdbcType=INTEGER}, 
      #{unitPrice,jdbcType=INTEGER}, #{taxUnitPrice,jdbcType=INTEGER}, #{allPrice,jdbcType=BIGINT}, 
      #{remark,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{incidentals,jdbcType=BIGINT}, 
      #{depotId,jdbcType=VARCHAR}, #{anotherDepotId,jdbcType=VARCHAR}, #{taxRate,jdbcType=DOUBLE}, 
      #{taxMoney,jdbcType=BIGINT}, #{taxLastMoney,jdbcType=BIGINT}, #{otherField1,jdbcType=VARCHAR}, 
      #{otherField2,jdbcType=VARCHAR}, #{otherField3,jdbcType=VARCHAR}, #{otherField4,jdbcType=VARCHAR}, 
      #{otherField5,jdbcType=VARCHAR}, #{materialType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ma.clothes.pojo.entity.DocumentItem">
    insert into clo_document_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="headerId != null">
        header_id,
      </if>
      <if test="materialId != null">
        material_id,
      </if>
      <if test="measuringUnit != null">
        measuring_unit,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="basicNumber != null">
        basic_number,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="taxUnitPrice != null">
        tax_unit_price,
      </if>
      <if test="allPrice != null">
        all_price,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="incidentals != null">
        incidentals,
      </if>
      <if test="depotId != null">
        depot_id,
      </if>
      <if test="anotherDepotId != null">
        another_depot_id,
      </if>
      <if test="taxRate != null">
        tax_rate,
      </if>
      <if test="taxMoney != null">
        tax_money,
      </if>
      <if test="taxLastMoney != null">
        tax_last_money,
      </if>
      <if test="otherField1 != null">
        other_field1,
      </if>
      <if test="otherField2 != null">
        other_field2,
      </if>
      <if test="otherField3 != null">
        other_field3,
      </if>
      <if test="otherField4 != null">
        other_field4,
      </if>
      <if test="otherField5 != null">
        other_field5,
      </if>
      <if test="materialType != null">
        material_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="headerId != null">
        #{headerId,jdbcType=VARCHAR},
      </if>
      <if test="materialId != null">
        #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="measuringUnit != null">
        #{measuringUnit,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="basicNumber != null">
        #{basicNumber,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=INTEGER},
      </if>
      <if test="taxUnitPrice != null">
        #{taxUnitPrice,jdbcType=INTEGER},
      </if>
      <if test="allPrice != null">
        #{allPrice,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="incidentals != null">
        #{incidentals,jdbcType=BIGINT},
      </if>
      <if test="depotId != null">
        #{depotId,jdbcType=VARCHAR},
      </if>
      <if test="anotherDepotId != null">
        #{anotherDepotId,jdbcType=VARCHAR},
      </if>
      <if test="taxRate != null">
        #{taxRate,jdbcType=DOUBLE},
      </if>
      <if test="taxMoney != null">
        #{taxMoney,jdbcType=BIGINT},
      </if>
      <if test="taxLastMoney != null">
        #{taxLastMoney,jdbcType=BIGINT},
      </if>
      <if test="otherField1 != null">
        #{otherField1,jdbcType=VARCHAR},
      </if>
      <if test="otherField2 != null">
        #{otherField2,jdbcType=VARCHAR},
      </if>
      <if test="otherField3 != null">
        #{otherField3,jdbcType=VARCHAR},
      </if>
      <if test="otherField4 != null">
        #{otherField4,jdbcType=VARCHAR},
      </if>
      <if test="otherField5 != null">
        #{otherField5,jdbcType=VARCHAR},
      </if>
      <if test="materialType != null">
        #{materialType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ma.clothes.pojo.entity.DocumentItemExample" resultType="java.lang.Long">
    select count(*) from clo_document_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update clo_document_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.headerId != null">
        header_id = #{record.headerId,jdbcType=VARCHAR},
      </if>
      <if test="record.materialId != null">
        material_id = #{record.materialId,jdbcType=VARCHAR},
      </if>
      <if test="record.measuringUnit != null">
        measuring_unit = #{record.measuringUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.basicNumber != null">
        basic_number = #{record.basicNumber,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=INTEGER},
      </if>
      <if test="record.taxUnitPrice != null">
        tax_unit_price = #{record.taxUnitPrice,jdbcType=INTEGER},
      </if>
      <if test="record.allPrice != null">
        all_price = #{record.allPrice,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.incidentals != null">
        incidentals = #{record.incidentals,jdbcType=BIGINT},
      </if>
      <if test="record.depotId != null">
        depot_id = #{record.depotId,jdbcType=VARCHAR},
      </if>
      <if test="record.anotherDepotId != null">
        another_depot_id = #{record.anotherDepotId,jdbcType=VARCHAR},
      </if>
      <if test="record.taxRate != null">
        tax_rate = #{record.taxRate,jdbcType=DOUBLE},
      </if>
      <if test="record.taxMoney != null">
        tax_money = #{record.taxMoney,jdbcType=BIGINT},
      </if>
      <if test="record.taxLastMoney != null">
        tax_last_money = #{record.taxLastMoney,jdbcType=BIGINT},
      </if>
      <if test="record.otherField1 != null">
        other_field1 = #{record.otherField1,jdbcType=VARCHAR},
      </if>
      <if test="record.otherField2 != null">
        other_field2 = #{record.otherField2,jdbcType=VARCHAR},
      </if>
      <if test="record.otherField3 != null">
        other_field3 = #{record.otherField3,jdbcType=VARCHAR},
      </if>
      <if test="record.otherField4 != null">
        other_field4 = #{record.otherField4,jdbcType=VARCHAR},
      </if>
      <if test="record.otherField5 != null">
        other_field5 = #{record.otherField5,jdbcType=VARCHAR},
      </if>
      <if test="record.materialType != null">
        material_type = #{record.materialType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update clo_document_item
    set id = #{record.id,jdbcType=VARCHAR},
      header_id = #{record.headerId,jdbcType=VARCHAR},
      material_id = #{record.materialId,jdbcType=VARCHAR},
      measuring_unit = #{record.measuringUnit,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      basic_number = #{record.basicNumber,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=INTEGER},
      tax_unit_price = #{record.taxUnitPrice,jdbcType=INTEGER},
      all_price = #{record.allPrice,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      incidentals = #{record.incidentals,jdbcType=BIGINT},
      depot_id = #{record.depotId,jdbcType=VARCHAR},
      another_depot_id = #{record.anotherDepotId,jdbcType=VARCHAR},
      tax_rate = #{record.taxRate,jdbcType=DOUBLE},
      tax_money = #{record.taxMoney,jdbcType=BIGINT},
      tax_last_money = #{record.taxLastMoney,jdbcType=BIGINT},
      other_field1 = #{record.otherField1,jdbcType=VARCHAR},
      other_field2 = #{record.otherField2,jdbcType=VARCHAR},
      other_field3 = #{record.otherField3,jdbcType=VARCHAR},
      other_field4 = #{record.otherField4,jdbcType=VARCHAR},
      other_field5 = #{record.otherField5,jdbcType=VARCHAR},
      material_type = #{record.materialType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ma.clothes.pojo.entity.DocumentItem">
    update clo_document_item
    <set>
      <if test="headerId != null">
        header_id = #{headerId,jdbcType=VARCHAR},
      </if>
      <if test="materialId != null">
        material_id = #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="measuringUnit != null">
        measuring_unit = #{measuringUnit,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="basicNumber != null">
        basic_number = #{basicNumber,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=INTEGER},
      </if>
      <if test="taxUnitPrice != null">
        tax_unit_price = #{taxUnitPrice,jdbcType=INTEGER},
      </if>
      <if test="allPrice != null">
        all_price = #{allPrice,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="incidentals != null">
        incidentals = #{incidentals,jdbcType=BIGINT},
      </if>
      <if test="depotId != null">
        depot_id = #{depotId,jdbcType=VARCHAR},
      </if>
      <if test="anotherDepotId != null">
        another_depot_id = #{anotherDepotId,jdbcType=VARCHAR},
      </if>
      <if test="taxRate != null">
        tax_rate = #{taxRate,jdbcType=DOUBLE},
      </if>
      <if test="taxMoney != null">
        tax_money = #{taxMoney,jdbcType=BIGINT},
      </if>
      <if test="taxLastMoney != null">
        tax_last_money = #{taxLastMoney,jdbcType=BIGINT},
      </if>
      <if test="otherField1 != null">
        other_field1 = #{otherField1,jdbcType=VARCHAR},
      </if>
      <if test="otherField2 != null">
        other_field2 = #{otherField2,jdbcType=VARCHAR},
      </if>
      <if test="otherField3 != null">
        other_field3 = #{otherField3,jdbcType=VARCHAR},
      </if>
      <if test="otherField4 != null">
        other_field4 = #{otherField4,jdbcType=VARCHAR},
      </if>
      <if test="otherField5 != null">
        other_field5 = #{otherField5,jdbcType=VARCHAR},
      </if>
      <if test="materialType != null">
        material_type = #{materialType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ma.clothes.pojo.entity.DocumentItem">
    update clo_document_item
    set header_id = #{headerId,jdbcType=VARCHAR},
      material_id = #{materialId,jdbcType=VARCHAR},
      measuring_unit = #{measuringUnit,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      basic_number = #{basicNumber,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=INTEGER},
      tax_unit_price = #{taxUnitPrice,jdbcType=INTEGER},
      all_price = #{allPrice,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      incidentals = #{incidentals,jdbcType=BIGINT},
      depot_id = #{depotId,jdbcType=VARCHAR},
      another_depot_id = #{anotherDepotId,jdbcType=VARCHAR},
      tax_rate = #{taxRate,jdbcType=DOUBLE},
      tax_money = #{taxMoney,jdbcType=BIGINT},
      tax_last_money = #{taxLastMoney,jdbcType=BIGINT},
      other_field1 = #{otherField1,jdbcType=VARCHAR},
      other_field2 = #{otherField2,jdbcType=VARCHAR},
      other_field3 = #{otherField3,jdbcType=VARCHAR},
      other_field4 = #{otherField4,jdbcType=VARCHAR},
      other_field5 = #{otherField5,jdbcType=VARCHAR},
      material_type = #{materialType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>