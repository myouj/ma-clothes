<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.DocumentHeadMapper">
  <resultMap id="BaseResultMap" type="entity.DocumentHead">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="sub_type" jdbcType="VARCHAR" property="subType" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="inital_number" jdbcType="VARCHAR" property="initalNumber" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="operator_name" jdbcType="VARCHAR" property="operatorName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="operator_time" jdbcType="TIMESTAMP" property="operatorTime" />
    <result column="organization_id" jdbcType="VARCHAR" property="organizationId" />
    <result column="handle_id" jdbcType="VARCHAR" property="handleId" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="change_amount" jdbcType="BIGINT" property="changeAmount" />
    <result column="allocation_project_id" jdbcType="VARCHAR" property="allocationProjectId" />
    <result column="total_price" jdbcType="BIGINT" property="totalPrice" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="salesman" jdbcType="VARCHAR" property="salesman" />
    <result column="account_id_list" jdbcType="VARCHAR" property="accountIdList" />
    <result column="account_money_list" jdbcType="VARCHAR" property="accountMoneyList" />
    <result column="discount" jdbcType="DOUBLE" property="discount" />
    <result column="discount_money" jdbcType="BIGINT" property="discountMoney" />
    <result column="discount_last_money" jdbcType="BIGINT" property="discountLastMoney" />
    <result column="other_money" jdbcType="BIGINT" property="otherMoney" />
    <result column="other_money_list" jdbcType="VARCHAR" property="otherMoneyList" />
    <result column="other_money_item" jdbcType="VARCHAR" property="otherMoneyItem" />
    <result column="account_date" jdbcType="INTEGER" property="accountDate" />
    <result column="status" jdbcType="BIT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, sub_type, project_id, inital_number, number, operator_name, create_time, 
    operator_time, organization_id, handle_id, account_id, change_amount, allocation_project_id, 
    total_price, pay_type, remark, salesman, account_id_list, account_money_list, discount, 
    discount_money, discount_last_money, other_money, other_money_list, other_money_item, 
    account_date, status
  </sql>
  <select id="selectByExample" parameterType="entity.DocumentHeadExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from clo_document_head
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="entity.DocumentHeadExample">
    delete from clo_document_head
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.DocumentHead">
    insert into clo_document_head (id, type, sub_type, 
      project_id, inital_number, number, 
      operator_name, create_time, operator_time, 
      organization_id, handle_id, account_id, 
      change_amount, allocation_project_id, total_price, 
      pay_type, remark, salesman, 
      account_id_list, account_money_list, discount, 
      discount_money, discount_last_money, other_money, 
      other_money_list, other_money_item, account_date, 
      status)
    values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{subType,jdbcType=VARCHAR}, 
      #{projectId,jdbcType=VARCHAR}, #{initalNumber,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, 
      #{operatorName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{operatorTime,jdbcType=TIMESTAMP}, 
      #{organizationId,jdbcType=VARCHAR}, #{handleId,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, 
      #{changeAmount,jdbcType=BIGINT}, #{allocationProjectId,jdbcType=VARCHAR}, #{totalPrice,jdbcType=BIGINT}, 
      #{payType,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{salesman,jdbcType=VARCHAR}, 
      #{accountIdList,jdbcType=VARCHAR}, #{accountMoneyList,jdbcType=VARCHAR}, #{discount,jdbcType=DOUBLE}, 
      #{discountMoney,jdbcType=BIGINT}, #{discountLastMoney,jdbcType=BIGINT}, #{otherMoney,jdbcType=BIGINT}, 
      #{otherMoneyList,jdbcType=VARCHAR}, #{otherMoneyItem,jdbcType=VARCHAR}, #{accountDate,jdbcType=INTEGER}, 
      #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="entity.DocumentHead">
    insert into clo_document_head
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="subType != null">
        sub_type,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="initalNumber != null">
        inital_number,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="operatorName != null">
        operator_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operatorTime != null">
        operator_time,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="handleId != null">
        handle_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="changeAmount != null">
        change_amount,
      </if>
      <if test="allocationProjectId != null">
        allocation_project_id,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="salesman != null">
        salesman,
      </if>
      <if test="accountIdList != null">
        account_id_list,
      </if>
      <if test="accountMoneyList != null">
        account_money_list,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="discountMoney != null">
        discount_money,
      </if>
      <if test="discountLastMoney != null">
        discount_last_money,
      </if>
      <if test="otherMoney != null">
        other_money,
      </if>
      <if test="otherMoneyList != null">
        other_money_list,
      </if>
      <if test="otherMoneyItem != null">
        other_money_item,
      </if>
      <if test="accountDate != null">
        account_date,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="subType != null">
        #{subType,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="initalNumber != null">
        #{initalNumber,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null">
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorTime != null">
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=VARCHAR},
      </if>
      <if test="handleId != null">
        #{handleId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="changeAmount != null">
        #{changeAmount,jdbcType=BIGINT},
      </if>
      <if test="allocationProjectId != null">
        #{allocationProjectId,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=BIGINT},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="salesman != null">
        #{salesman,jdbcType=VARCHAR},
      </if>
      <if test="accountIdList != null">
        #{accountIdList,jdbcType=VARCHAR},
      </if>
      <if test="accountMoneyList != null">
        #{accountMoneyList,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DOUBLE},
      </if>
      <if test="discountMoney != null">
        #{discountMoney,jdbcType=BIGINT},
      </if>
      <if test="discountLastMoney != null">
        #{discountLastMoney,jdbcType=BIGINT},
      </if>
      <if test="otherMoney != null">
        #{otherMoney,jdbcType=BIGINT},
      </if>
      <if test="otherMoneyList != null">
        #{otherMoneyList,jdbcType=VARCHAR},
      </if>
      <if test="otherMoneyItem != null">
        #{otherMoneyItem,jdbcType=VARCHAR},
      </if>
      <if test="accountDate != null">
        #{accountDate,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.DocumentHeadExample" resultType="java.lang.Long">
    select count(*) from clo_document_head
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update clo_document_head
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.subType != null">
        sub_type = #{record.subType,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.initalNumber != null">
        inital_number = #{record.initalNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorName != null">
        operator_name = #{record.operatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operatorTime != null">
        operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.organizationId != null">
        organization_id = #{record.organizationId,jdbcType=VARCHAR},
      </if>
      <if test="record.handleId != null">
        handle_id = #{record.handleId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.changeAmount != null">
        change_amount = #{record.changeAmount,jdbcType=BIGINT},
      </if>
      <if test="record.allocationProjectId != null">
        allocation_project_id = #{record.allocationProjectId,jdbcType=VARCHAR},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=BIGINT},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.salesman != null">
        salesman = #{record.salesman,jdbcType=VARCHAR},
      </if>
      <if test="record.accountIdList != null">
        account_id_list = #{record.accountIdList,jdbcType=VARCHAR},
      </if>
      <if test="record.accountMoneyList != null">
        account_money_list = #{record.accountMoneyList,jdbcType=VARCHAR},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=DOUBLE},
      </if>
      <if test="record.discountMoney != null">
        discount_money = #{record.discountMoney,jdbcType=BIGINT},
      </if>
      <if test="record.discountLastMoney != null">
        discount_last_money = #{record.discountLastMoney,jdbcType=BIGINT},
      </if>
      <if test="record.otherMoney != null">
        other_money = #{record.otherMoney,jdbcType=BIGINT},
      </if>
      <if test="record.otherMoneyList != null">
        other_money_list = #{record.otherMoneyList,jdbcType=VARCHAR},
      </if>
      <if test="record.otherMoneyItem != null">
        other_money_item = #{record.otherMoneyItem,jdbcType=VARCHAR},
      </if>
      <if test="record.accountDate != null">
        account_date = #{record.accountDate,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update clo_document_head
    set id = #{record.id,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      sub_type = #{record.subType,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      inital_number = #{record.initalNumber,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      operator_name = #{record.operatorName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      organization_id = #{record.organizationId,jdbcType=VARCHAR},
      handle_id = #{record.handleId,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      change_amount = #{record.changeAmount,jdbcType=BIGINT},
      allocation_project_id = #{record.allocationProjectId,jdbcType=VARCHAR},
      total_price = #{record.totalPrice,jdbcType=BIGINT},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      salesman = #{record.salesman,jdbcType=VARCHAR},
      account_id_list = #{record.accountIdList,jdbcType=VARCHAR},
      account_money_list = #{record.accountMoneyList,jdbcType=VARCHAR},
      discount = #{record.discount,jdbcType=DOUBLE},
      discount_money = #{record.discountMoney,jdbcType=BIGINT},
      discount_last_money = #{record.discountLastMoney,jdbcType=BIGINT},
      other_money = #{record.otherMoney,jdbcType=BIGINT},
      other_money_list = #{record.otherMoneyList,jdbcType=VARCHAR},
      other_money_item = #{record.otherMoneyItem,jdbcType=VARCHAR},
      account_date = #{record.accountDate,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="entity.DocumentHead">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="sub_type" jdbcType="VARCHAR" property="subType" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="inital_number" jdbcType="VARCHAR" property="initalNumber" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="operator_name" jdbcType="VARCHAR" property="operatorName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="operator_time" jdbcType="TIMESTAMP" property="operatorTime" />
    <result column="organization_id" jdbcType="VARCHAR" property="organizationId" />
    <result column="handle_id" jdbcType="VARCHAR" property="handleId" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="change_amount" jdbcType="BIGINT" property="changeAmount" />
    <result column="allocation_project_id" jdbcType="VARCHAR" property="allocationProjectId" />
    <result column="total_price" jdbcType="BIGINT" property="totalPrice" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="salesman" jdbcType="VARCHAR" property="salesman" />
    <result column="account_id_list" jdbcType="VARCHAR" property="accountIdList" />
    <result column="account_money_list" jdbcType="VARCHAR" property="accountMoneyList" />
    <result column="discount" jdbcType="DOUBLE" property="discount" />
    <result column="discount_money" jdbcType="BIGINT" property="discountMoney" />
    <result column="discount_last_money" jdbcType="BIGINT" property="discountLastMoney" />
    <result column="other_money" jdbcType="BIGINT" property="otherMoney" />
    <result column="other_money_list" jdbcType="VARCHAR" property="otherMoneyList" />
    <result column="other_money_item" jdbcType="VARCHAR" property="otherMoneyItem" />
    <result column="account_date" jdbcType="INTEGER" property="accountDate" />
    <result column="status" jdbcType="BIT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, sub_type, project_id, inital_number, number, operator_name, create_time, 
    operator_time, organization_id, handle_id, account_id, change_amount, allocation_project_id, 
    total_price, pay_type, remark, salesman, account_id_list, account_money_list, discount, 
    discount_money, discount_last_money, other_money, other_money_list, other_money_item, 
    account_date, status
  </sql>
  <select id="selectByExample" parameterType="entity.DocumentHeadExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from clo_document_head
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="entity.DocumentHeadExample">
    delete from clo_document_head
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.DocumentHead">
    insert into clo_document_head (id, type, sub_type, 
      project_id, inital_number, number, 
      operator_name, create_time, operator_time, 
      organization_id, handle_id, account_id, 
      change_amount, allocation_project_id, total_price, 
      pay_type, remark, salesman, 
      account_id_list, account_money_list, discount, 
      discount_money, discount_last_money, other_money, 
      other_money_list, other_money_item, account_date, 
      status)
    values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{subType,jdbcType=VARCHAR}, 
      #{projectId,jdbcType=VARCHAR}, #{initalNumber,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, 
      #{operatorName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{operatorTime,jdbcType=TIMESTAMP}, 
      #{organizationId,jdbcType=VARCHAR}, #{handleId,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, 
      #{changeAmount,jdbcType=BIGINT}, #{allocationProjectId,jdbcType=VARCHAR}, #{totalPrice,jdbcType=BIGINT}, 
      #{payType,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{salesman,jdbcType=VARCHAR}, 
      #{accountIdList,jdbcType=VARCHAR}, #{accountMoneyList,jdbcType=VARCHAR}, #{discount,jdbcType=DOUBLE}, 
      #{discountMoney,jdbcType=BIGINT}, #{discountLastMoney,jdbcType=BIGINT}, #{otherMoney,jdbcType=BIGINT}, 
      #{otherMoneyList,jdbcType=VARCHAR}, #{otherMoneyItem,jdbcType=VARCHAR}, #{accountDate,jdbcType=INTEGER}, 
      #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="entity.DocumentHead">
    insert into clo_document_head
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="subType != null">
        sub_type,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="initalNumber != null">
        inital_number,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="operatorName != null">
        operator_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operatorTime != null">
        operator_time,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="handleId != null">
        handle_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="changeAmount != null">
        change_amount,
      </if>
      <if test="allocationProjectId != null">
        allocation_project_id,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="salesman != null">
        salesman,
      </if>
      <if test="accountIdList != null">
        account_id_list,
      </if>
      <if test="accountMoneyList != null">
        account_money_list,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="discountMoney != null">
        discount_money,
      </if>
      <if test="discountLastMoney != null">
        discount_last_money,
      </if>
      <if test="otherMoney != null">
        other_money,
      </if>
      <if test="otherMoneyList != null">
        other_money_list,
      </if>
      <if test="otherMoneyItem != null">
        other_money_item,
      </if>
      <if test="accountDate != null">
        account_date,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="subType != null">
        #{subType,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="initalNumber != null">
        #{initalNumber,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null">
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorTime != null">
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=VARCHAR},
      </if>
      <if test="handleId != null">
        #{handleId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="changeAmount != null">
        #{changeAmount,jdbcType=BIGINT},
      </if>
      <if test="allocationProjectId != null">
        #{allocationProjectId,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=BIGINT},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="salesman != null">
        #{salesman,jdbcType=VARCHAR},
      </if>
      <if test="accountIdList != null">
        #{accountIdList,jdbcType=VARCHAR},
      </if>
      <if test="accountMoneyList != null">
        #{accountMoneyList,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DOUBLE},
      </if>
      <if test="discountMoney != null">
        #{discountMoney,jdbcType=BIGINT},
      </if>
      <if test="discountLastMoney != null">
        #{discountLastMoney,jdbcType=BIGINT},
      </if>
      <if test="otherMoney != null">
        #{otherMoney,jdbcType=BIGINT},
      </if>
      <if test="otherMoneyList != null">
        #{otherMoneyList,jdbcType=VARCHAR},
      </if>
      <if test="otherMoneyItem != null">
        #{otherMoneyItem,jdbcType=VARCHAR},
      </if>
      <if test="accountDate != null">
        #{accountDate,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.DocumentHeadExample" resultType="java.lang.Long">
    select count(*) from clo_document_head
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update clo_document_head
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.subType != null">
        sub_type = #{record.subType,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.initalNumber != null">
        inital_number = #{record.initalNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorName != null">
        operator_name = #{record.operatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operatorTime != null">
        operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.organizationId != null">
        organization_id = #{record.organizationId,jdbcType=VARCHAR},
      </if>
      <if test="record.handleId != null">
        handle_id = #{record.handleId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.changeAmount != null">
        change_amount = #{record.changeAmount,jdbcType=BIGINT},
      </if>
      <if test="record.allocationProjectId != null">
        allocation_project_id = #{record.allocationProjectId,jdbcType=VARCHAR},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=BIGINT},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.salesman != null">
        salesman = #{record.salesman,jdbcType=VARCHAR},
      </if>
      <if test="record.accountIdList != null">
        account_id_list = #{record.accountIdList,jdbcType=VARCHAR},
      </if>
      <if test="record.accountMoneyList != null">
        account_money_list = #{record.accountMoneyList,jdbcType=VARCHAR},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=DOUBLE},
      </if>
      <if test="record.discountMoney != null">
        discount_money = #{record.discountMoney,jdbcType=BIGINT},
      </if>
      <if test="record.discountLastMoney != null">
        discount_last_money = #{record.discountLastMoney,jdbcType=BIGINT},
      </if>
      <if test="record.otherMoney != null">
        other_money = #{record.otherMoney,jdbcType=BIGINT},
      </if>
      <if test="record.otherMoneyList != null">
        other_money_list = #{record.otherMoneyList,jdbcType=VARCHAR},
      </if>
      <if test="record.otherMoneyItem != null">
        other_money_item = #{record.otherMoneyItem,jdbcType=VARCHAR},
      </if>
      <if test="record.accountDate != null">
        account_date = #{record.accountDate,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update clo_document_head
    set id = #{record.id,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      sub_type = #{record.subType,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      inital_number = #{record.initalNumber,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      operator_name = #{record.operatorName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      organization_id = #{record.organizationId,jdbcType=VARCHAR},
      handle_id = #{record.handleId,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      change_amount = #{record.changeAmount,jdbcType=BIGINT},
      allocation_project_id = #{record.allocationProjectId,jdbcType=VARCHAR},
      total_price = #{record.totalPrice,jdbcType=BIGINT},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      salesman = #{record.salesman,jdbcType=VARCHAR},
      account_id_list = #{record.accountIdList,jdbcType=VARCHAR},
      account_money_list = #{record.accountMoneyList,jdbcType=VARCHAR},
      discount = #{record.discount,jdbcType=DOUBLE},
      discount_money = #{record.discountMoney,jdbcType=BIGINT},
      discount_last_money = #{record.discountLastMoney,jdbcType=BIGINT},
      other_money = #{record.otherMoney,jdbcType=BIGINT},
      other_money_list = #{record.otherMoneyList,jdbcType=VARCHAR},
      other_money_item = #{record.otherMoneyItem,jdbcType=VARCHAR},
      account_date = #{record.accountDate,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>