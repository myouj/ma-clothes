<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.MaterialMapper">
  <resultMap id="BaseResultMap" type="entity.Material">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="category_id" jdbcType="VARCHAR" property="categoryId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
    <result column="packing" jdbcType="INTEGER" property="packing" />
    <result column="safety_stock" jdbcType="INTEGER" property="safetyStock" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="standard" jdbcType="VARCHAR" property="standard" />
    <result column="color" jdbcType="VARCHAR" property="color" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="retail_rrice" jdbcType="INTEGER" property="retailRrice" />
    <result column="low_price" jdbcType="INTEGER" property="lowPrice" />
    <result column="preset_price_one" jdbcType="INTEGER" property="presetPriceOne" />
    <result column="preset_price_two" jdbcType="INTEGER" property="presetPriceTwo" />
    <result column="unit_id" jdbcType="VARCHAR" property="unitId" />
    <result column="first_out_unit" jdbcType="VARCHAR" property="firstOutUnit" />
    <result column="first_in_unit" jdbcType="VARCHAR" property="firstInUnit" />
    <result column="price_strategy" jdbcType="VARCHAR" property="priceStrategy" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="other_field1" jdbcType="VARCHAR" property="otherField1" />
    <result column="other_field2" jdbcType="VARCHAR" property="otherField2" />
    <result column="other_field3" jdbcType="VARCHAR" property="otherField3" />
    <result column="enabled_serial_number" jdbcType="BIT" property="enabledSerialNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, category_id, name, manufacturer, packing, safety_stock, model, standard, color, 
    unit, remark, retail_rrice, low_price, preset_price_one, preset_price_two, unit_id, 
    first_out_unit, first_in_unit, price_strategy, enabled, other_field1, other_field2, 
    other_field3, enabled_serial_number
  </sql>
  <select id="selectByExample" parameterType="entity.MaterialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from clo_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="entity.MaterialExample">
    delete from clo_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Material">
    insert into clo_material (id, category_id, name, 
      manufacturer, packing, safety_stock, 
      model, standard, color, 
      unit, remark, retail_rrice, 
      low_price, preset_price_one, preset_price_two, 
      unit_id, first_out_unit, first_in_unit, 
      price_strategy, enabled, other_field1, 
      other_field2, other_field3, enabled_serial_number
      )
    values (#{id,jdbcType=VARCHAR}, #{categoryId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{manufacturer,jdbcType=VARCHAR}, #{packing,jdbcType=INTEGER}, #{safetyStock,jdbcType=INTEGER}, 
      #{model,jdbcType=VARCHAR}, #{standard,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{retailRrice,jdbcType=INTEGER}, 
      #{lowPrice,jdbcType=INTEGER}, #{presetPriceOne,jdbcType=INTEGER}, #{presetPriceTwo,jdbcType=INTEGER}, 
      #{unitId,jdbcType=VARCHAR}, #{firstOutUnit,jdbcType=VARCHAR}, #{firstInUnit,jdbcType=VARCHAR}, 
      #{priceStrategy,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, #{otherField1,jdbcType=VARCHAR}, 
      #{otherField2,jdbcType=VARCHAR}, #{otherField3,jdbcType=VARCHAR}, #{enabledSerialNumber,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.Material">
    insert into clo_material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="manufacturer != null">
        manufacturer,
      </if>
      <if test="packing != null">
        packing,
      </if>
      <if test="safetyStock != null">
        safety_stock,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="standard != null">
        standard,
      </if>
      <if test="color != null">
        color,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="retailRrice != null">
        retail_rrice,
      </if>
      <if test="lowPrice != null">
        low_price,
      </if>
      <if test="presetPriceOne != null">
        preset_price_one,
      </if>
      <if test="presetPriceTwo != null">
        preset_price_two,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="firstOutUnit != null">
        first_out_unit,
      </if>
      <if test="firstInUnit != null">
        first_in_unit,
      </if>
      <if test="priceStrategy != null">
        price_strategy,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="otherField1 != null">
        other_field1,
      </if>
      <if test="otherField2 != null">
        other_field2,
      </if>
      <if test="otherField3 != null">
        other_field3,
      </if>
      <if test="enabledSerialNumber != null">
        enabled_serial_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="packing != null">
        #{packing,jdbcType=INTEGER},
      </if>
      <if test="safetyStock != null">
        #{safetyStock,jdbcType=INTEGER},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="standard != null">
        #{standard,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="retailRrice != null">
        #{retailRrice,jdbcType=INTEGER},
      </if>
      <if test="lowPrice != null">
        #{lowPrice,jdbcType=INTEGER},
      </if>
      <if test="presetPriceOne != null">
        #{presetPriceOne,jdbcType=INTEGER},
      </if>
      <if test="presetPriceTwo != null">
        #{presetPriceTwo,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=VARCHAR},
      </if>
      <if test="firstOutUnit != null">
        #{firstOutUnit,jdbcType=VARCHAR},
      </if>
      <if test="firstInUnit != null">
        #{firstInUnit,jdbcType=VARCHAR},
      </if>
      <if test="priceStrategy != null">
        #{priceStrategy,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="otherField1 != null">
        #{otherField1,jdbcType=VARCHAR},
      </if>
      <if test="otherField2 != null">
        #{otherField2,jdbcType=VARCHAR},
      </if>
      <if test="otherField3 != null">
        #{otherField3,jdbcType=VARCHAR},
      </if>
      <if test="enabledSerialNumber != null">
        #{enabledSerialNumber,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.MaterialExample" resultType="java.lang.Long">
    select count(*) from clo_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update clo_material
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.manufacturer != null">
        manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.packing != null">
        packing = #{record.packing,jdbcType=INTEGER},
      </if>
      <if test="record.safetyStock != null">
        safety_stock = #{record.safetyStock,jdbcType=INTEGER},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.standard != null">
        standard = #{record.standard,jdbcType=VARCHAR},
      </if>
      <if test="record.color != null">
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.retailRrice != null">
        retail_rrice = #{record.retailRrice,jdbcType=INTEGER},
      </if>
      <if test="record.lowPrice != null">
        low_price = #{record.lowPrice,jdbcType=INTEGER},
      </if>
      <if test="record.presetPriceOne != null">
        preset_price_one = #{record.presetPriceOne,jdbcType=INTEGER},
      </if>
      <if test="record.presetPriceTwo != null">
        preset_price_two = #{record.presetPriceTwo,jdbcType=INTEGER},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=VARCHAR},
      </if>
      <if test="record.firstOutUnit != null">
        first_out_unit = #{record.firstOutUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.firstInUnit != null">
        first_in_unit = #{record.firstInUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.priceStrategy != null">
        price_strategy = #{record.priceStrategy,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.otherField1 != null">
        other_field1 = #{record.otherField1,jdbcType=VARCHAR},
      </if>
      <if test="record.otherField2 != null">
        other_field2 = #{record.otherField2,jdbcType=VARCHAR},
      </if>
      <if test="record.otherField3 != null">
        other_field3 = #{record.otherField3,jdbcType=VARCHAR},
      </if>
      <if test="record.enabledSerialNumber != null">
        enabled_serial_number = #{record.enabledSerialNumber,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update clo_material
    set id = #{record.id,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      packing = #{record.packing,jdbcType=INTEGER},
      safety_stock = #{record.safetyStock,jdbcType=INTEGER},
      model = #{record.model,jdbcType=VARCHAR},
      standard = #{record.standard,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      retail_rrice = #{record.retailRrice,jdbcType=INTEGER},
      low_price = #{record.lowPrice,jdbcType=INTEGER},
      preset_price_one = #{record.presetPriceOne,jdbcType=INTEGER},
      preset_price_two = #{record.presetPriceTwo,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=VARCHAR},
      first_out_unit = #{record.firstOutUnit,jdbcType=VARCHAR},
      first_in_unit = #{record.firstInUnit,jdbcType=VARCHAR},
      price_strategy = #{record.priceStrategy,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=BIT},
      other_field1 = #{record.otherField1,jdbcType=VARCHAR},
      other_field2 = #{record.otherField2,jdbcType=VARCHAR},
      other_field3 = #{record.otherField3,jdbcType=VARCHAR},
      enabled_serial_number = #{record.enabledSerialNumber,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="entity.Material">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="category_id" jdbcType="VARCHAR" property="categoryId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
    <result column="packing" jdbcType="INTEGER" property="packing" />
    <result column="safety_stock" jdbcType="INTEGER" property="safetyStock" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="standard" jdbcType="VARCHAR" property="standard" />
    <result column="color" jdbcType="VARCHAR" property="color" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="retail_rrice" jdbcType="INTEGER" property="retailRrice" />
    <result column="low_price" jdbcType="INTEGER" property="lowPrice" />
    <result column="preset_price_one" jdbcType="INTEGER" property="presetPriceOne" />
    <result column="preset_price_two" jdbcType="INTEGER" property="presetPriceTwo" />
    <result column="unit_id" jdbcType="VARCHAR" property="unitId" />
    <result column="first_out_unit" jdbcType="VARCHAR" property="firstOutUnit" />
    <result column="first_in_unit" jdbcType="VARCHAR" property="firstInUnit" />
    <result column="price_strategy" jdbcType="VARCHAR" property="priceStrategy" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="other_field1" jdbcType="VARCHAR" property="otherField1" />
    <result column="other_field2" jdbcType="VARCHAR" property="otherField2" />
    <result column="other_field3" jdbcType="VARCHAR" property="otherField3" />
    <result column="enabled_serial_number" jdbcType="BIT" property="enabledSerialNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, category_id, name, manufacturer, packing, safety_stock, model, standard, color, 
    unit, remark, retail_rrice, low_price, preset_price_one, preset_price_two, unit_id, 
    first_out_unit, first_in_unit, price_strategy, enabled, other_field1, other_field2, 
    other_field3, enabled_serial_number
  </sql>
  <select id="selectByExample" parameterType="entity.MaterialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from clo_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="entity.MaterialExample">
    delete from clo_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Material">
    insert into clo_material (id, category_id, name, 
      manufacturer, packing, safety_stock, 
      model, standard, color, 
      unit, remark, retail_rrice, 
      low_price, preset_price_one, preset_price_two, 
      unit_id, first_out_unit, first_in_unit, 
      price_strategy, enabled, other_field1, 
      other_field2, other_field3, enabled_serial_number
      )
    values (#{id,jdbcType=VARCHAR}, #{categoryId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{manufacturer,jdbcType=VARCHAR}, #{packing,jdbcType=INTEGER}, #{safetyStock,jdbcType=INTEGER}, 
      #{model,jdbcType=VARCHAR}, #{standard,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{retailRrice,jdbcType=INTEGER}, 
      #{lowPrice,jdbcType=INTEGER}, #{presetPriceOne,jdbcType=INTEGER}, #{presetPriceTwo,jdbcType=INTEGER}, 
      #{unitId,jdbcType=VARCHAR}, #{firstOutUnit,jdbcType=VARCHAR}, #{firstInUnit,jdbcType=VARCHAR}, 
      #{priceStrategy,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, #{otherField1,jdbcType=VARCHAR}, 
      #{otherField2,jdbcType=VARCHAR}, #{otherField3,jdbcType=VARCHAR}, #{enabledSerialNumber,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.Material">
    insert into clo_material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="manufacturer != null">
        manufacturer,
      </if>
      <if test="packing != null">
        packing,
      </if>
      <if test="safetyStock != null">
        safety_stock,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="standard != null">
        standard,
      </if>
      <if test="color != null">
        color,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="retailRrice != null">
        retail_rrice,
      </if>
      <if test="lowPrice != null">
        low_price,
      </if>
      <if test="presetPriceOne != null">
        preset_price_one,
      </if>
      <if test="presetPriceTwo != null">
        preset_price_two,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="firstOutUnit != null">
        first_out_unit,
      </if>
      <if test="firstInUnit != null">
        first_in_unit,
      </if>
      <if test="priceStrategy != null">
        price_strategy,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="otherField1 != null">
        other_field1,
      </if>
      <if test="otherField2 != null">
        other_field2,
      </if>
      <if test="otherField3 != null">
        other_field3,
      </if>
      <if test="enabledSerialNumber != null">
        enabled_serial_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="packing != null">
        #{packing,jdbcType=INTEGER},
      </if>
      <if test="safetyStock != null">
        #{safetyStock,jdbcType=INTEGER},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="standard != null">
        #{standard,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="retailRrice != null">
        #{retailRrice,jdbcType=INTEGER},
      </if>
      <if test="lowPrice != null">
        #{lowPrice,jdbcType=INTEGER},
      </if>
      <if test="presetPriceOne != null">
        #{presetPriceOne,jdbcType=INTEGER},
      </if>
      <if test="presetPriceTwo != null">
        #{presetPriceTwo,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=VARCHAR},
      </if>
      <if test="firstOutUnit != null">
        #{firstOutUnit,jdbcType=VARCHAR},
      </if>
      <if test="firstInUnit != null">
        #{firstInUnit,jdbcType=VARCHAR},
      </if>
      <if test="priceStrategy != null">
        #{priceStrategy,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="otherField1 != null">
        #{otherField1,jdbcType=VARCHAR},
      </if>
      <if test="otherField2 != null">
        #{otherField2,jdbcType=VARCHAR},
      </if>
      <if test="otherField3 != null">
        #{otherField3,jdbcType=VARCHAR},
      </if>
      <if test="enabledSerialNumber != null">
        #{enabledSerialNumber,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.MaterialExample" resultType="java.lang.Long">
    select count(*) from clo_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update clo_material
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.manufacturer != null">
        manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.packing != null">
        packing = #{record.packing,jdbcType=INTEGER},
      </if>
      <if test="record.safetyStock != null">
        safety_stock = #{record.safetyStock,jdbcType=INTEGER},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.standard != null">
        standard = #{record.standard,jdbcType=VARCHAR},
      </if>
      <if test="record.color != null">
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.retailRrice != null">
        retail_rrice = #{record.retailRrice,jdbcType=INTEGER},
      </if>
      <if test="record.lowPrice != null">
        low_price = #{record.lowPrice,jdbcType=INTEGER},
      </if>
      <if test="record.presetPriceOne != null">
        preset_price_one = #{record.presetPriceOne,jdbcType=INTEGER},
      </if>
      <if test="record.presetPriceTwo != null">
        preset_price_two = #{record.presetPriceTwo,jdbcType=INTEGER},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=VARCHAR},
      </if>
      <if test="record.firstOutUnit != null">
        first_out_unit = #{record.firstOutUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.firstInUnit != null">
        first_in_unit = #{record.firstInUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.priceStrategy != null">
        price_strategy = #{record.priceStrategy,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.otherField1 != null">
        other_field1 = #{record.otherField1,jdbcType=VARCHAR},
      </if>
      <if test="record.otherField2 != null">
        other_field2 = #{record.otherField2,jdbcType=VARCHAR},
      </if>
      <if test="record.otherField3 != null">
        other_field3 = #{record.otherField3,jdbcType=VARCHAR},
      </if>
      <if test="record.enabledSerialNumber != null">
        enabled_serial_number = #{record.enabledSerialNumber,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update clo_material
    set id = #{record.id,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      packing = #{record.packing,jdbcType=INTEGER},
      safety_stock = #{record.safetyStock,jdbcType=INTEGER},
      model = #{record.model,jdbcType=VARCHAR},
      standard = #{record.standard,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      retail_rrice = #{record.retailRrice,jdbcType=INTEGER},
      low_price = #{record.lowPrice,jdbcType=INTEGER},
      preset_price_one = #{record.presetPriceOne,jdbcType=INTEGER},
      preset_price_two = #{record.presetPriceTwo,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=VARCHAR},
      first_out_unit = #{record.firstOutUnit,jdbcType=VARCHAR},
      first_in_unit = #{record.firstInUnit,jdbcType=VARCHAR},
      price_strategy = #{record.priceStrategy,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=BIT},
      other_field1 = #{record.otherField1,jdbcType=VARCHAR},
      other_field2 = #{record.otherField2,jdbcType=VARCHAR},
      other_field3 = #{record.otherField3,jdbcType=VARCHAR},
      enabled_serial_number = #{record.enabledSerialNumber,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>